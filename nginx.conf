user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Caching setup
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

    upstream app_server {
        server 127.0.0.1:8000;
    }

   server {
    listen 443 ssl;
    server_name _;

    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    # Add the Cloudflare root certificate as a trusted CA
    ssl_trusted_certificate /etc/nginx/ssl/cloudflare_root.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_hide_header X-Frame-Options;
        
        # Enable caching
        proxy_cache my_cache;
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache $http_upgrade;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name _;

    return 301 https://$host$request_uri;
}

}
