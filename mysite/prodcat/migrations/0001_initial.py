# Generated by Django 4.2.15 on 2024-09-15 08:39

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import prodcat.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Band',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BandPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('fullprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('under30price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('siblingprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('key', models.CharField(default=prodcat.models.BandPackage.generate_band_key, help_text="A unique key like 'all', 'small', or 'none'", max_length=5, unique=True)),
                ('includes', models.CharField(choices=[('all', 'All Bands'), ('one', 'One Band Only')], default='all', help_text='Does this package include all or just one of the following bands?', max_length=5)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='LessonPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('fullprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('under30price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('siblingprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('key', models.CharField(default=prodcat.models.LessonPackage.generate_band_key, help_text="A unique key like 'all', 'small', or 'none'", max_length=5, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BandRelatedInstrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('instruments', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='prodcat.instrument')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_instruments', to='prodcat.band')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='BandPackageRelatedBand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('band', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='prodcat.band')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_bands', to='prodcat.bandpackage')),
            ],
            options={
                'ordering': ['sort_order'],
                'unique_together': {('page', 'band')},
            },
        ),
    ]
